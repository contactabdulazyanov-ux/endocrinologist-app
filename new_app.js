// –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
class ThyroidApp {
    constructor() {
        this.init();
    }

    init() {
        this.setupEventListeners();
        this.fillTestData();
    }

    setupEventListeners() {
        // –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö
        document.getElementById('tsh').addEventListener('input', (e) => {
            this.checkTSH(parseFloat(e.target.value));
        });
    }

    checkTSH(tsh) {
        if (tsh > 10) {
            this.showWarning('–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¢–¢–ì —Ç—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è');
        } else if (tsh > 4) {
            this.showInfo('–£—Ä–æ–≤–µ–Ω—å –¢–¢–ì –ø–æ–≤—ã—à–µ–Ω - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤.–¢4');
        }
    }

    analyzeComplete() {
        const data = this.getInputData();
        
        if (!data.tsh) {
            this.showError('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¢–¢–ì –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
            return;
        }

        this.showLoading(true);
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        setTimeout(() => {
            const result = THYROID_KNOWLEDGE.algorithms.evaluateThyroidFunction(
                data.tsh, data.freeT4, data.freeT3, data.antiTPO, data.antiTG
            );
            
            this.displayResults(data, result);
            this.showLoading(false);
        }, 1000);
    }

    getInputData() {
        return {
            tsh: parseFloat(document.getElementById('tsh').value),
            freeT4: parseFloat(document.getElementById('freeT4').value),
            freeT3: parseFloat(document.getElementById('freeT3').value),
            antiTPO: parseFloat(document.getElementById('antiTPO').value),
            antiTG: parseFloat(document.getElementById('antiTG').value)
        };
    }

    displayResults(data, diagnosis) {
        const container = document.getElementById('results');
        
        let html = `
            <div class="diagnosis-card diagnosis-${diagnosis.severity}">
                <h3>${diagnosis.name}</h3>
                <div class="parameter-list">
                    <h4>–í–≤–µ–¥–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</h4>
        `;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        for (const [key, value] of Object.entries(data)) {
            if (!isNaN(value)) {
                const evaluation = THYROID_KNOWLEDGE.utils.evaluateParameter(value, key.toUpperCase());
                html += `
                    <div class="parameter-item">
                        <span class="parameter-name">${this.getParameterName(key)}:</span>
                        <span class="parameter-value ${evaluation.status}">
                            ${THYROID_KNOWLEDGE.utils.formatValue(value, key.toUpperCase())} 
                            (${evaluation.text})
                        </span>
                    </div>
                `;
            }
        }

        html += `</div>`;

        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if (diagnosis.additionalTests) {
            html += `
                <div class="recommendation-box">
                    <h4>üìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:</h4>
                    <ul>${diagnosis.additionalTests.map(test => `<li>${test}</li>`).join('')}</ul>
                </div>
            `;
        }

        // –õ–µ—á–µ–Ω–∏–µ
        if (diagnosis.treatment) {
            html += `
                <div class="treatment-protocol">
                    <h4>üíä –¢–∞–∫—Ç–∏–∫–∞ –ª–µ—á–µ–Ω–∏—è:</h4>
                    <p><strong>–ü—Ä–µ–ø–∞—Ä–∞—Ç:</strong> ${diagnosis.treatment.drug}</p>
                    <p><strong>–î–æ–∑–∏—Ä–æ–≤–∫–∞:</strong> ${diagnosis.treatment.dose}</p>
                    <p><strong>–¶–µ–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:</strong> ${diagnosis.treatment.target}</p>
                    <p><strong>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:</strong> ${diagnosis.treatment.monitoring}</p>
                </div>
            `;
        }

        // –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if (diagnosis.recommendations) {
            html += `
                <div class="recommendation-box">
                    <h4>üë®‚Äç‚öïÔ∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–∞:</h4>
                    <ul>${diagnosis.recommendations.map(rec => `<li>${rec}</li>`).join('')}</ul>
                </div>
            `;
        }

        html += `</div>`;
        container.innerHTML = html;
        container.style.display = 'block';
    }

    getParameterName(key) {
        const names = {
            tsh: '–¢–¢–ì',
            freeT4: '—Å–≤. –¢4',
            freeT3: '—Å–≤. –¢3', 
            antiTPO: '–ê–Ω—Ç–∏-–¢–ü–û',
            antiTG: '–ê–Ω—Ç–∏-–¢–ì'
        };
        return names[key] || key;
    }

    fillTestData() {
        // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        document.getElementById('tsh').value = '8.5';
        document.getElementById('freeT4').value = '9.0';
        document.getElementById('antiTPO').value = '250';
    }

    clearAll() {
        const inputs = document.querySelectorAll('input[type="number"]');
        inputs.forEach(input => input.value = '');
        document.getElementById('results').style.display = 'none';
    }

    showLoading(show) {
        document.getElementById('loading').style.display = show ? 'block' : 'none';
    }

    showError(message) {
        alert('–û—à–∏–±–∫–∞: ' + message);
    }

    showWarning(message) {
        console.warn('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ' + message);
    }

    showInfo(message) {
        console.info('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ' + message);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è HTML
function analyzeComplete() {
    window.thyroidApp.analyzeComplete();
}

function clearAll() {
    window.thyroidApp.clearAll();
}

function fillExample() {
    window.thyroidApp.fillTestData();
}

function showInfo(param) {
    const info = THYROID_KNOWLEDGE.parametersInfo[param];
    if (info) {
        document.getElementById('modalContent').innerHTML = `
            <h3>${info.name}</h3>
            <p><strong>–ö–ª–∏–Ω–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</strong> ${info.significance}</p>
            <div class="interpretation">
                <h4>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</h4>
                <ul>
                    <li>–ü–æ–≤—ã—à–µ–Ω: ${info.interpretation.high}</li>
                    <li>–ü–æ–Ω–∏–∂–µ–Ω: ${info.interpretation.low}</li>
                    <li>–ù–æ—Ä–º–∞: ${info.interpretation.normal}</li>
                </ul>
            </div>
        `;
        document.getElementById('infoModal').style.display = 'block';
    }
}

function closeModal() {
    document.getElementById('infoModal').style.display = 'none';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    window.thyroidApp = new ThyroidApp();
});
